// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SocomecApp.Models;

#nullable disable

namespace SocomecApp.Migrations
{
    [DbContext(typeof(SocomecContext))]
    partial class SocomecContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("SocomecApp.Models.FileFERME", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Annee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Article")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Centre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateDebutRest")
                        .HasColumnType("datetime2");

                    b.Property<string>("Magasin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mois")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ordre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Projet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QteLiv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QteOrdre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TempsFabrication")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FileFERME");
                });

            modelBuilder.Entity("SocomecApp.Models.FileFil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ArticleMPS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FileFil");
                });

            modelBuilder.Entity("SocomecApp.Models.FileMPS", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Annee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArticleMPS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CapaciteRequise")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Centre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateFabrication")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateFin")
                        .HasColumnType("datetime2");

                    b.Property<string>("Fil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mois")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ordre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ordre2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrdreType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QteOrdre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FileMPS");
                });

            modelBuilder.Entity("SocomecApp.Models.FileMPSDF", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ArticleMPS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateTrans")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DteDebPlanif")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DteFinPlanif")
                        .HasColumnType("datetime2");

                    b.Property<string>("Gamme")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MethodePlanif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ordre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuantiteOrdre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Statut")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FileMPSDF");
                });

            modelBuilder.Entity("SocomecApp.Models.FileMRP", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Annee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CapaciteRequise")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Centre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodeArticle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DteFabrication")
                        .HasColumnType("datetime2");

                    b.Property<string>("Fil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mois")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ordre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ordre2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeOrdre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FileMRP");
                });

            modelBuilder.Entity("SocomecApp.Models.FileMRPDF", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Article")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateDebutPlanif")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateFinPlanif")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTrans")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gamme")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ordre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Planif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuantOrdre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatutOrdre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FileMRPDF");
                });

            modelBuilder.Entity("SocomecApp.Models.OV", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Annee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Article")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Client")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAR")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateLivConfirmee")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateLivDemandee")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateLivPlanif")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateLivRevisee")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateValC")
                        .HasColumnType("datetime2");

                    b.Property<string>("HeureAL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HeureCreation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HeureValC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Li")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Livree")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Magasin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mois")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Montant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ov")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PRS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pays")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Projet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Qte")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reliquat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Statu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeArt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeOrd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Zone")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("OV");
                });

            modelBuilder.Entity("SocomecApp.Models.OVFac", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Annee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Article")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Client")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAR")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateFacture")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateLivConfirmee")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateLivDemandee")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateLivPlanif")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateLivRevisee")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateValC")
                        .HasColumnType("datetime2");

                    b.Property<string>("HeureAL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HeureCreation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HeureValC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Li")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Livree")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Magasin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mois")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Montant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ov")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PRS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pays")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Projet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Qte")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reliquat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Statu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeArt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeOrd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Zone")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("OVFac");
                });

            modelBuilder.Entity("SocomecApp.Models.POV", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Annee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Articleplan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("DemEcl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LivInt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LivVen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mois")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ov")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PExep")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PRS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prev")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StockPlanif")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("POV");
                });

            modelBuilder.Entity("SocomecApp.Models.PRS", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Article")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Consommation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoutsMatieres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoutsOperatoires")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrixRevient")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PRS");
                });

            modelBuilder.Entity("SocomecApp.Models.Recaps", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Annee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mois")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomProject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Recaps");
                });

            modelBuilder.Entity("SocomecApp.Models.Rendu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Annee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Centre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodeArticle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateHeure")
                        .HasColumnType("datetime2");

                    b.Property<string>("HeuresMO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Magasin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mois")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Operation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ordre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Projet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QteLiv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QteOrdre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Rendu");
                });

            modelBuilder.Entity("SocomecApp.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("SocomecApp.Models.ZRP", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("A")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodeArticle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Couv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Couv2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("De")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DetailType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DtFabrication")
                        .HasColumnType("datetime2");

                    b.Property<string>("Fil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mach")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mq")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Multiplier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Op")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ordre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PRS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Planif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pourc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pourcentage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Quantite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SCType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Statut")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatutOF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Syst")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Temps")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Varia")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ZRP");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("SocomecApp.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("SocomecApp.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SocomecApp.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("SocomecApp.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
